# 换成connection
query classesByOrganization($organization_id: ID!) {
  organization(organization_id: $organization_id) {
    classes {
      class_id
      class_name
      status
      schools {
        school_id
        school_name
      }
      teachers {
        user_id
        user_name
      }
      students {
        user_id
        user_name
      }
    }
  }
}



# 只用到了查询的类型，没调接口 适配器调整
query participantsByClass($class_id: ID!) {
  class(class_id: $class_id) {
    teachers {
      ...userIdName
    }
    students {
      ...userIdName
    }
  }
}

# query qeuryMe($organization_id: ID!) {
#   me {
#     ...userIdName
#     membership(organization_id: $organization_id) {
#       roles {
#         permissions {
#           permission_name
#         }
#       }
#     }
#   }
# }

query queryMyUser {
  myUser {
    node {
      id
      givenName
      familyName
    }
  }
}

# query myPermissionsAndClassesTeachingQuery($organization_id: ID!) {
#   me {
#     user_id
#     membership(organization_id: $organization_id) {
#       organization_id
#       schoolMemberships {
#         # schoolsConnection 传userid和orgId
#         school_id
#         status
#       }
#       classesTeaching {
#         # myUser传 -》node -> classesTeaching 传organizationId 用这个
#         # classesConnection 传 orgid === currorgid teacherId === userid
#         class_id
#         status
#       }
#     }
#   }
# }

# query mySchoolIDs($organization_id: ID!) {
#   me {
#     membership(organization_id: $organization_id) {
#       schoolMemberships {
#         school_id
#       }
#     }
#   }
# }

# 之前的mySchoolId和myPermissionsAndClassesTeachingQuery里面的schoolMemberships都用这个查询
query getSchoolMemberships($userId: UUIDFilter, $organizationId: UUIDFilter, $cursor: String) {
  schoolsConnection(
    filter: {
      userId: $userId,
      organizationId: $organizationId
    },
    direction: FORWARD,
    directionArgs: {
      cursor: $cursor
    }
  ) {
    totalCount
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      node {
        id
        status
      }
    }
  }
}

# 之前的myPermissionsAndClassesTeachingQuery里面的classesTeaching用这个查询
query getClassesTeaching($organizationId: UUIDFilter, $cursor: String) {
  myUser {
    node {
      classesTeachingConnection(filter: { organizationId: $organizationId }, cursor: $cursor) {
        totalCount
        pageInfo {
          hasNextPage
          endCursor
        }
        edges {
          node {
            id
            status
          }
        }
      }
    }
  }
}

query getStudentNameById($filter: UserFilter,$directionArgs:ConnectionsDirectionArgs) {
  usersConnection(filter: $filter, direction: FORWARD,directionArgs: $directionArgs) {
    edges {
      node {
        id
        givenName
        familyName
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}


query getOrganizations($direction: ConnectionDirection!, $cursor: String, $count: PageSize,$sort: OrganizationSortInput!,$filter:OrganizationFilter!) {
    organizationsConnection(
      direction: $direction
      filter: $filter
      directionArgs: { count: $count, cursor: $cursor }
      sort: $sort
    ) {
      totalCount
      edges {
        node {
          id
          name
          owners{
          email
         }
        }
      }
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
    }
  }

# 换成connection
query classesBySchool($school_id: ID!) {
  school(school_id: $school_id) {
    classes {
      ...classIdNameStatus
      schools {
        school_id
        school_name
      }
      teachers {
        ...userIdName
      }
      students {
        ...userIdName
      }
    }
  }
}


# 只用到了class列表 schools teachers students没用到建议替换为classesConnection
query classesTeachingQuery($user_id: ID!, $organization_id: ID!) {
  user(user_id: $user_id) {
    membership(organization_id: $organization_id) {
      classesTeaching {
        class_id
        class_name
        status
        schools {
          school_id
          school_name
        }
        teachers {
          user_id
          user_name
        }
        students {
          user_id
          user_name
        }
      }
    }
  }
}

query classesStudentQuery($user_id: ID!, $organization_id: ID!) {
  user(user_id: $user_id) {
    membership(organization_id: $organization_id) {
      classes {
        class_id
        class_name
        status
        schools {
          school_id
          school_name
        }
        teachers {
          user_id
          user_name
        }
        students {
          user_id
          user_name
        }
      }
    }
  }
}
# 写了接口的实现 但是好像没调用，如果有调用的话换成connection
query schoolByUserQuery($user_id: ID!, $organization_id: ID!) {
  user(user_id: $user_id) {
    membership(organization_id: $organization_id) {
      schoolMemberships {
        school {
          school_id
          school_name
          classes {
            status
            class_id
            class_name
            teachers {
              user_id
              user_name
            }
            students {
              user_id
              user_name
            }
          }
        }
      }
    }
  }
}
# 换成connection
query schoolByOrgQuery($organization_id: ID!) {
  organization(organization_id: $organization_id) {
    schools {
      school_id
      school_name
      classes {
        status
        class_id
        class_name
        teachers {
          user_id
          user_name
        }
        students {
          user_id
          user_name
        }
      }
    }
  }
}

# 换成connection
query getPrograms($program_id: ID!) {
  program(id: $program_id) {
    id
    name
    status
    subjects {
      id
      name
      status
      categories {
        id
        name
        status
        subcategories {
          id
          name
          status
        }
      }
    }
    age_ranges {
      id
      name
      status
    }
    grades {
      id
      name
      status
    }
  }
}
# 换成connection
query studentsByOrganization($organization_id: ID!) {
  organization(organization_id: $organization_id) {
    classes {
      class_id
      class_name
      status
      schools {
        school_id
      }
      students {
        user_id
        user_name
      }
    }
    schools {
      school_id
      school_name
      classes {
        class_id
        class_name
        status
        students {
          user_id
          user_name
        }
      }
    }
  }
}



query getProgramsAndSubjects($count: PageSize!,  $cursor: String!, $filter: ProgramFilter!) {
  programsConnection(filter:$filter
  directionArgs: {
    count:  $count
    cursor: $cursor
  }
  direction: FORWARD
){
    totalCount
    pageInfo{
      hasNextPage
      endCursor
    }
    edges{
      node{
        id
        name
        status
        system
        ageRanges{
          id
          name
          status
          system
        }
        grades{
          id
          name
          status
          system
        }
				subjects{
        	id
        	name
        	status
          system
        }
      }
    }
  }
}

query getSchoolsFilterList($filter: SchoolFilter, $direction: ConnectionDirection!, $directionArgs: ConnectionsDirectionArgs){
  schoolsConnection(filter: $filter, direction:$direction, directionArgs: $directionArgs) {
     totalCount
     edges{
      cursor
      node {
        id
        name
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

query getClassFilterList($filter: ClassFilter, $direction: ConnectionDirection!, $directionArgs: ConnectionsDirectionArgs, $sort: ClassSortInput!){
  classesConnection(filter: $filter, direction: $direction, directionArgs: $directionArgs, sort: $sort) {
     totalCount
     edges {
      cursor
      node {
        id
        name
      }
    }
     pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
  }
}

query getUser($filter: UserFilter, $direction: ConnectionDirection!, $directionArgs: ConnectionsDirectionArgs) {
  usersConnection(
    direction: $direction,
    filter: $filter,
    directionArgs: $directionArgs
  ) {
  totalCount
    edges {
      node {
        id
        givenName
        familyName
        status
        roles {
          id
          name
        }
      }
    },
         pageInfo {
          hasNextPage
          hasPreviousPage
          startCursor
          endCursor
        }
  }
}





fragment userIdName on User {
  user_id
  user_name
}

fragment classIdNameStatus on Class {
  class_id
  class_name
  status
}


query getClassByInfo(
  $filter: ClassFilter,
  $direction: ConnectionDirection!,
  $studentFilter: UserFilter,
  $teacherFilter: UserFilter,
  $studentCursor: String,
  $studentDirection: ConnectionDirection,
  $teacherCursor: String,
  $teacherDirection: ConnectionDirection) {
classesConnection(
    filter: $filter,
    direction: $direction
  ) {
     edges {
      cursor
      node {
        id
        name
        studentsConnection(filter: $studentFilter, cursor: $studentCursor, direction: $studentDirection) {
          totalCount
          edges {
            cursor
            node {
              id
              givenName
              familyName
              status
            }
          }
        pageInfo {
            hasNextPage
            hasPreviousPage
            startCursor
            endCursor
          }
        },
        teachersConnection(filter: $teacherFilter, cursor: $teacherCursor, direction: $teacherDirection) {
          totalCount
          edges {
            cursor
            node {
              id
              givenName
              familyName
              status
            }
          }
          pageInfo {
            hasNextPage
            hasPreviousPage
            startCursor
            endCursor
          }
        },
      }
    }
  }
}
query getRolesId (
  $filter: RoleFilter,
  $direction: ConnectionDirection!,
  $directionArgs: ConnectionsDirectionArgs
) {
  rolesConnection(
    filter: $filter
    direction: $direction,
    directionArgs: $directionArgs
  ) {
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        id
        name
        status
        system
      }
    }
  }
}

query userNameByUserIdQuery($filter: UserFilter) {
  usersConnection(filter: $filter, direction: FORWARD) {
    edges {
      node {
        id
        givenName
        familyName
      }
    }
  }
}
query classesTeachersConnection(
  $cursor: String,
  $filter: ClassFilter,
  $teacherFilter: UserFilter,
  $teacherCursor: String,
  ) {
classesConnection(
    filter: $filter
    directionArgs: {
    cursor: $cursor
    },
    direction: FORWARD
    sort:{
    order:ASC
    field:name
    }
    ) {
     totalCount
     edges {
      node {
        id
        name
        teachersConnection(filter: $teacherFilter, cursor: $teacherCursor, direction: FORWARD) {
          totalCount
          edges {
            cursor
            node {
              id
              givenName
              familyName
              status
            }
          }
          pageInfo {
            hasNextPage
            hasPreviousPage
            startCursor
            endCursor
          }
        },
      }
    }
    pageInfo{
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor

    }
  }
}
query classNode($classId:ID!,$teacherCursor:String){
  classNode(id:$classId){
    name
    teachersConnection(cursor:$teacherCursor){
      totalCount
      edges{
        node{
          id
          familyName
          givenName
          status
        }
      }
      pageInfo{
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
      }
      
    }
  }

}

query classesBySchoolId (
  $cursor: String,
  $filter: ClassFilter,
  $schoolId:ID!,
  ) {
  schoolNode(id:$schoolId){
    organizationId
    classesConnection(filter: $filter,
      cursor: $cursor
      direction: FORWARD
     ){
      totalCount
      pageInfo{
        endCursor
        hasNextPage
      }
      edges{
        node{
          id
          name
        }
      }
    }
  }
  }

query classesList(
  $cursor: String,
  $filter: ClassFilter,
  ) {
classesConnection(
    filter: $filter,
    directionArgs: {
    cursor: $cursor
    },
    direction: FORWARD
  ) {
    totalCount
     edges {
      node {
        id
        name
      }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
  
  query schoolsClasses (
  $cursor: String,
  $filter: SchoolFilter,
  ) {
schoolsConnection(
    filter: $filter,
    directionArgs: {
    cursor: $cursor
    },
    direction: FORWARD
    sort:{
    order:ASC
    field:name
    }
  ) {
    totalCount
     edges {
      node {
        id
        name
        classesConnection( direction: FORWARD) {
          totalCount
           edges {
            node {
              id
              name
            }
            }
            pageInfo {
              hasNextPage
              endCursor
            }
        }
      }
      }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
 query classesStudentsConnection(
  $cursor: String,
  $filter: ClassFilter,
  ) {
classesConnection(
    filter: $filter
    directionArgs: {
    cursor: $cursor
    },
    direction: FORWARD
    sort:{
    order:ASC
    field:name
    }
    ) {
     totalCount
     edges {
      node {
        id
        name
        studentsConnection( direction: FORWARD) {
          totalCount
          edges {
            cursor
            node {
              id
              givenName
              familyName
              status
            }
          }
          pageInfo {
            hasNextPage
            hasPreviousPage
            startCursor
            endCursor
          }
        },
      }
    }
    pageInfo{
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor

    }
  }
}
query classNodeStudents($classId:ID!,$studentsCursor:String){
  classNode(id:$classId){
    name
    studentsConnection(cursor:$studentsCursor){
      totalCount
      edges{
        node{
          id
          familyName
          givenName
          status
        }
      }
      pageInfo{
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
      }
      
    }
  }

}
